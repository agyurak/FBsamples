/* This files show some other data manipulation that I used to bring together several files that were the result of brain
imaging analyses. */


/* This step reads in a csv file that contains data for more participants than I need for the current analysis. It also has 
timepoint1 and timepoint2 (pre and post assessment) set up in the wide format. I will need to transpose these. Showing 
steps for this for dealing with the timepoint1 data. I repeat the same for timpoint2 and then merge together by the primary key */
proc import datafile= 'C:\project\emotionreg\GAD_MDDtraining\data\fmri\resting_graph\all_g7_degree.csv'
out=work.graph_network replace;
run;

/* Subsetting for those individuals in our current analyses. */
data ignite_graph_network;
set graph_network;
if sid < 500 then delete;
run;

/* This step activates a macro for later renaming variables to add a suffix. I will end the suffix for 
timepoint1 or baseline assessment as the data that I read up above was set up in the long format and I wanted to 
rearrange it for the wide format. */
%macro renamesuffix(oldvarlist, suffix);
  %let k=1;
  %let old = %scan(&oldvarlist, &k);
     %do %while("&old" NE "");
      rename &old = &old.&suffix;
	  %let k = %eval(&k + 1);
      %let old = %scan(&oldvarlist, &k);
  %end;
%mend;


/* Data setup in long format, we just need baseline timpoint 1 data for this round. */
data ignite_graph_networkTP1;
set ignite_graph_network;
if timepoint ne 'tp1' then delete;
drop timepoint;
run;

/* Adding the _tp1 suffix to organize the variables in the wide format instead of long format. The macro 
renames the variables in a batch for example n8_LECN_01 becomes n8_LECN_01_tp1. */
data ignite_graph_networkTP1;
set ignite_graph_networkTP1;

 %renamesuffix
(n8_LECN_01 
n9_LECN_02
n10_LECN_03
n11_LECN_04
n13_LECN_06
n31_RECN_01
n32_RECN_02
n33_RECN_03
n34_RECN_04
n35_RECN_05
n36_RECN_06
n37_Salience_01
n38_Salience_02
n39_Salience_03
n40_Salience_04
n41_Salience_05
n42_Salience_06
n43_Salience_07
n44_Visuospatial_01
n45_Visuospatial_02
n46_Visuospatial_03
n47_Visuospatial_04
n48_Visuospatial_05
n49_Visuospatial_06
n50_Visuospatial_07
n51_Visuospatial_08
n54_Visuospatial_11
n59_dDMN_01
n60_dDMN_02
n61_dDMN_03
n62_dDMN_04
n63_dDMN_05
n64_dDMN_06
n65_dDMN_07
n66_dDMN_08
n67_dDMN_09, _tp1);
run;


/* I was given a file where the column names were encoded in 2 rows. For example:
x = 0 0 0 1 1 2 2 2 2 2...
y = 0 1 3 2 1 4 5 5 1 0...
The numerical values run 0-54.
These pairs of values xy map onto strings that need to be paired up according to the pattern in xy.
This step reads in a file and will generate variable names.  I will need to map these xy pairs (see concatenate below) as variable names (called 
ROIs) in a later step (not included). There were 1485 xy combinations and I wanted to use this code to make sure there are no 
mistakes in the variable names. */
proc import datafile= 'C:\project\ispotd\data\vars.xls'
out=work.vars; 
run;

/*adding variable names to column names*/
data recoded;
set vars;
length xs $400 ys $400 ROI $800;

if	x=	0	then 	xs=	'LECN1'	;
if	x=	1	then 	xs=	'LECN2'	;
if	x=	2	then 	xs=	'LECN3'	;
if	x=	3	then 	xs=	'LECN4'	;
if	x=	4	then 	xs=	'LECN5'	;
if	x=	5	then 	xs=	'LECN6'	;
if	x=	6	then 	xs=	'RECN1'	;
if	x=	7	then 	xs=	'RECN2'	;
if	x=	8	then 	xs=	'RECN3'	;
if	x=	9	then 	xs=	'RECN4'	;
if	x=	10	then 	xs=	'RECN5'	;
if	x=	11	then 	xs=	'RECN6'	;
if	x=	12	then 	xs=	'Salience1'	;
if	x=	13	then 	xs=	'Salience2'	;
if	x=	14	then 	xs=	'Salience3'	;
if	x=	15	then 	xs=	'Salience4'	;
if	x=	16	then 	xs=	'Salience5'	;
if	x=	17	then 	xs=	'Salience6'	;
if	x=	18	then 	xs=	'Salience7'	;
if	x=	19	then 	xs=	'dDMN1'	;
if	x=	20	then 	xs=	'dDMN2'	;
if	x=	21	then 	xs=	'dDMN3'	;
if	x=	22	then 	xs=	'dDMN4'	;
if	x=	23	then 	xs=	'dDMN5'	;
if	x=	24	then 	xs=	'dDMN6'	;
if	x=	25	then 	xs=	'dDMN7'	;
if	x=	26	then 	xs=	'dDMN8'	;
if	x=	27	then 	xs=	'dDMN9'	;
if	x=	28	then 	xs=	'vDMN1'	;
if	x=	29	then 	xs=	'vDMN2'	;
if	x=	30	then 	xs=	'vDMN3'	;
if	x=	31	then 	xs=	'vDMN4'	;
if	x=	32	then 	xs=	'vDMN5'	;
if	x=	33	then 	xs=	'vDMN6'	;
if	x=	34	then 	xs=	'vDMN7'	;
if	x=	35	then 	xs=	'vDMN8'	;
if	x=	36	then 	xs=	'vDMN9'	;
if	x=	37	then 	xs=	'vDMN10'	;
if	x=	38	then 	xs=	'post_Salience1'	;
if	x=	39	then 	xs=	'post_Salience2'	;
if	x=	40	then 	xs=	'post_Salience3'	;
if	x=	41	then 	xs=	'post_Salience4'	;
if	x=	42	then 	xs=	'post_Salience5'	;
if	x=	43	then 	xs=	'post_Salience6'	;
if	x=	44	then 	xs=	'post_Salience7'	;
if	x=	45	then 	xs=	'post_Salience8'	;
if	x=	46	then 	xs=	'post_Salience9'	;
if	x=	47	then 	xs=	'post_Salience10'	;
if	x=	48	then 	xs=	'post_Salience11'	;
if	x=	49	then 	xs=	'post_Salience12'	;
if	x=	50	then 	xs=	'mayberg'	;
if	x=	51	then 	xs=	'dacc'	;
if	x=	52	then 	xs=	'vacc'	;
if	x=	53	then 	xs=	'L_amy'	;
if	x=	54	then 	xs=	'R_amy'	;

/*recoding*/
if	y=	0	then 	ys=	'LECN1'	;
if	y=	1	then 	ys=	'LECN2'	;
if	y=	2	then 	ys=	'LECN3'	;
if	y=	3	then 	ys=	'LECN4'	;
if	y=	4	then 	ys=	'LECN5'	;
if	y=	5	then 	ys=	'LECN6'	;
if	y=	6	then 	ys=	'RECN1'	;
if	y=	7	then 	ys=	'RECN2'	;
if	y=	8	then 	ys=	'RECN3'	;
if	y=	9	then 	ys=	'RECN4'	;
if	y=	10	then 	ys=	'RECN5'	;
if	y=	11	then 	ys=	'RECN6'	;
if	y=	12	then 	ys=	'Salience1'	;
if	y=	13	then 	ys=	'Salience2'	;
if	y=	14	then 	ys=	'Salience3'	;
if	y=	15	then 	ys=	'Salience4'	;
if	y=	16	then 	ys=	'Salience5'	;
if	y=	17	then 	ys=	'Salience6'	;
if	y=	18	then 	ys=	'Salience7'	;
if	y=	19	then 	ys=	'dDMN1'	;
if	y=	20	then 	ys=	'dDMN2'	;
if	y=	21	then 	ys=	'dDMN3'	;
if	y=	22	then 	ys=	'dDMN4'	;
if	y=	23	then 	ys=	'dDMN5'	;
if	y=	24	then 	ys=	'dDMN6'	;
if	y=	25	then 	ys=	'dDMN7'	;
if	y=	26	then 	ys=	'dDMN8'	;
if	y=	27	then 	ys=	'dDMN9'	;
if	y=	28	then 	ys=	'vDMN1'	;
if	y=	29	then 	ys=	'vDMN2'	;
if	y=	30	then 	ys=	'vDMN3'	;
if	y=	31	then 	ys=	'vDMN4'	;
if	y=	32	then 	ys=	'vDMN5'	;
if	y=	33	then 	ys=	'vDMN6'	;
if	y=	34	then 	ys=	'vDMN7'	;
if	y=	35	then 	ys=	'vDMN8'	;
if	y=	36	then 	ys=	'vDMN9'	;
if	y=	37	then 	ys=	'vDMN10'	;
if	y=	38	then 	ys=	'post_Salience1'	;
if	y=	39	then 	ys=	'post_Salience2'	;
if	y=	40	then 	ys=	'post_Salience3'	;
if	y=	41	then 	ys=	'post_Salience4'	;
if	y=	42	then 	ys=	'post_Salience5'	;
if	y=	43	then 	ys=	'post_Salience6'	;
if	y=	44	then 	ys=	'post_Salience7'	;
if	y=	45	then 	ys=	'post_Salience8'	;
if	y=	46	then 	ys=	'post_Salience9'	;
if	y=	47	then 	ys=	'post_Salience10'	;
if	y=	48	then 	ys=	'post_Salience11'	;
if	y=	49	then 	ys=	'post_Salience12'	;
if	y=	50	then 	ys=	'mayberg'	;
if	y=	51	then 	ys=	'dacc'	;
if	y=	52	then 	ys=	'vacc'	;
if	y=	53	then 	ys=	'L_amy'	;
if	y=	54	then 	ys=	'R_amy'	;
/*cats function removes trailing and leading blanks*/
ROI = cats (of xs ys);
run;

/* This is the behavioral file sent in an email so I am copy pasting the content and using a dataline step. */
data emostroopbehTP1;
input
SID Accuracy_OverallTP1	Accurracy_iITP1	Accurracy_iCTP1	Accurracy_cITP1	Accurracy_cCTP1	iI_cITP1	iI_cI_FTP1	iI_cI_HTP1	inc_conTP1	inc_con_FTP1	inc_con_HTP1	Mean_RT_inconTP1	Mean_RT_conTP1	Mean_RT_incon_FTP1	Mean_RT_con_FTP1	Mean_RT_incon_HTP1	Mean_RT_con_HTP1	Mean_RT_iITP1	Mean_RT_iCTP1	Mean_RT_cITP1	Mean_RT_cCTP1	N_iiTP1	N_icTP1	N_ciTP1	N_ccTP1	Mean_RT_ii_preFTP1	Mean_RT_ii_preHTP1	Mean_RT_ii_postFTP1	Mean_RT_ii_postHTP1	Mean_RT_ic_preFTP1	Mean_RT_ic_preHTP1	Mean_RT_ic_postFTP1	Mean_RT_ic_postHTP1	Mean_RT_ci_preFTP1	Mean_RT_ci_preHTP1	Mean_RT_ci_postFTP1	Mean_RT_ci_postHTP1	Mean_RT_cc_preFTP1	Mean_RT_cc_preHTP1	Mean_RT_cc_postFTP1	Mean_RT_cc_postHTP1	N_ii_preFTP1	N_ii_preHTP1	N_ii_postFTP1	N_ii_postHTP1	N_ic_preFTP1	N_ic_preHTP1	N_ic_postFTP1	N_ic_postHTP1	N_ci_preFTP1	N_ci_preHTP1	N_ci_postFTP1	N_ci_postHTP1	N_cc_preFTP1	N_cc_preHTP1	N_cc_postFTP1	N_cc_postHTP1	Mean_RT_ffTP1	Mean_RT_fhTP1	Mean_RT_hfTP1	Mean_RT_hhTP1	N_ffTP1	N_fhTP1	N_hfTP1	N_hhTP1	Mean_RT_iiC_postFTP1	Mean_RT_iiC_postHTP1	Mean_RT_iiI_postFTP1	Mean_RT_iiI_postHTP1	Mean_RT_icC_postFTP1	Mean_RT_icC_postHTP1	Mean_RT_icI_postFTP1	Mean_RT_icI_postHTP1	Mean_RT_ciC_postFTP1	Mean_RT_ciC_postHTP1	Mean_RT_ciI_postFTP1	Mean_RT_ciI_postHTP1	Mean_RT_ccC_postFTP1	Mean_RT_ccC_postHTP1	Mean_RT_ccI_postFTP1	Mean_RT_ccI_postHTP1	N_iiC_postFTP1	N_iiC_postHTP1	N_iiI_postFTP1	N_iiI_postHTP1	N_icC_postFTP1	N_icC_postHTP1	N_icI_postFTP1	N_icI_postHTP1	N_ciC_postFTP1	N_ciC_postHTP1	N_ciI_postFTP1	N_ciI_postHTP1	N_ccC_postFTP1	N_ccC_postHTP1	N_ccI_postFTP1	N_ccI_postHTP1
;
datalines;
600	0.952703	0.972973	0.916667	0.972222	0.942857	-161.485	-357.985	146.632	-69.583	-203.963	32.4412	1419.23	1488.81	1468.67	1672.63	1426.44	1394	1338.48	1633.68	1499.97	1322.48	33	31	33	27	1343	1333.69	1284.25	1495.44	1636.41	1630.36	1775.8	1613.24	1476.87	1519.22	1642.24	1348.81	1490.21	1141.85	1543.67	1145.53	17	16	16	18	17	14	15	17	15	18	17	16	14	13	12	15	1664.83	1334.88	1403.44	1390.94	29	34	32	31	1154.67	1487.43	1373.1	1500.55	2091.88	1846.14	1164.5	1450.2	1641.9	1440.64	1642.71	1146.8	1874.2	948.5	1307.57	1276.89	6	7	10	11	8	7	6	10	10	11	7	5	5	6	7	9
601	0.864865	0.783784	0.916667	0.805556	0.971429	-231.681	-312.933	-75.3	183.39	266.472	83.5487	1094.02	910.632	1113.25	846.778	1036.23	952.679	965.857	906.593	1197.54	914.267	21	27	26	30	948.182	924.889	917.667	1002	852.688	985	838	944.5	1134.6	1283.36	1230.6	1077.3	903.875	926.143	853.8	960.857	11	9	9	12	16	11	12	14	15	11	15	10	16	14	15	14	908.5	989.31	996.48	985.429	28	29	25	21	970	1094.8	875.8	935.714	794.75	989.667	979.4	910.625	1157.18	1198.14	1432.5	1072.5	848.143	985.4	1016.7	947.222	4	5	5	7	8	6	5	8	11	7	4	4	7	5	10	9
602	0.952703	0.972973	0.972222	0.972222	0.885714	-36.0772	-66.978	52.2899	28.2211	-16.5884	104.355	803.172	774.951	695.121	711.71	934.032	829.677	785.697	779.147	821.774	769.667	33	34	31	27	852.278	768.412	662.647	957.647	801.75	746.857	710.8	833.105	728.385	916.882	729.625	905.357	738.071	782.786	712.562	824.25	18	17	17	17	20	14	15	19	13	17	16	14	14	14	16	12	715.875	838.281	696.171	906.214	32	32	35	28	662.833	962.5	662.545	955	775.625	857	636.714	819.167	694.8	923.091	811.667	840.333	648	913.4	732.111	805.625	6	6	11	11	8	7	7	12	10	11	6	3	6	5	9	8
603	0.898649	0.945946	0.888889	0.888889	0.885714	45.3739	-27.3167	42.5375	86.6475	99.6249	66.7148	841.148	754.5	867.032	767.407	828.355	761.64	862.719	749.962	817.345	759.038	32	26	29	26	820.235	910.867	852.933	848.938	761.312	768.182	729.846	773.154	837.133	824.4	880.25	806.4	769.692	748.385	802.286	749.167	17	15	15	16	16	11	13	13	15	15	16	15	13	13	14	12	818.138	780.312	813.5	825.44	29	32	30	25	832.833	977.667	866.333	813.364	769	813.25	742.429	755.333	907.727	826.7	819.8	765.8	672.2	718.8	766.875	830.625	6	6	9	11	7	4	7	9	11	10	5	5	5	5	8	8
604	0.966216	0.972973	0.944444	1	0.942857	-0.214294	-59.7083	5.64166	36.6911	44.6132	10.1785	848.385	811.694	826.765	782.151	871.645	861.467	848.286	821.969	848.5	800.733	35	32	30	30	818	852	798.667	874.375	866.05	790.385	761.688	908.588	860	837	858.375	868.733	781.786	794.533	801.412	799.846	17	17	18	16	20	13	16	17	15	15	16	15	14	15	17	13	829.061	873.444	794.054	887.222	33	36	37	27	821.143	976	784.364	815.8	801.125	964.333	696.143	878.182	879.364	814.556	870.667	950	844.875	830.333	809.5	773.714	7	6	11	10	8	6	7	11	11	9	6	6	8	6	10	7
605	0.986486	1	1	0.944444	1	-14.4886	-36.5255	48.8125	37.4393	12.8807	53.2301	686.292	648.853	664.062	651.182	698.594	645.364	679.382	649.886	693.871	647.758	34	35	31	33	665.25	701.294	646.941	723	656.1	627.143	657.125	640.941	670.143	698.722	683.467	674.188	658.235	636.625	645.588	650.062	16	17	17	16	20	14	16	17	14	18	15	16	17	16	17	16	668.061	663.091	657.838	694.333	33	33	37	33	621	770.833	665.1	699.667	667.625	615	646.625	627.273	707.556	714.455	648.667	585.6	682.5	674.286	635.7	657.2	7	6	10	9	8	6	8	11	9	11	6	5	8	7	10	10
607	0.912162	0.891892	0.972222	0.777778	1	-2.39539	79.7019	-100.476	76.1508	86.5862	99.9479	671.941	595.79	685.103	598.517	687.667	587.719	670.72	602.31	673.115	590.061	25	29	26	33	617	769	729.077	641.615	595.5	613.455	613.846	592.938	620.818	687.714	649.375	742.091	598.882	580.688	586.062	582.5	14	10	13	13	18	11	13	16	11	14	16	11	17	16	16	16	630.097	601.968	652.138	641.68	31	31	29	25	708.333	725.5	746.857	604.333	598.125	592.167	639	593.4	637	785.222	665.286	548	610.875	575.143	585	588.222	6	4	7	9	8	6	5	10	9	9	7	2	8	7	9	9
608	0.959459	0.972973	1	0.916667	0.971429	-13.7449	4.96082	-29.7542	108.103	106.517	115.26	795.857	687.754	778.969	672.452	813.29	698.03	789.094	673.312	802.839	701.758	32	32	31	33	775.133	801.412	781.294	797.933	651.389	701.5	681.333	666.235	803.143	802.588	776.333	827.688	711.647	691.25	664.125	731.812	15	17	17	15	18	14	15	17	14	17	15	16	17	16	16	16	735.355	703.258	706.562	782.781	31	31	32	32	814.857	865.857	768.8	760.625	690.125	731.714	642.167	620.4	787.444	826	759.667	831.4	710.375	756.286	655.889	712.778	7	7	10	8	8	7	6	10	9	11	6	5	8	7	9	9
609	0.912162	0.837838	0.944444	0.888889	0.971429	-38.7333	5.70477	-67.9333	-20.4762	11.069	-37.3426	705.127	725.603	715.621	704.552	702.407	739.75	684	730.778	722.733	721.097	25	27	30	31	663.333	715	718.571	664.667	738.444	767.778	706	750.6	707.923	721.625	712.867	732.6	703.933	723.667	703.529	727.231	15	10	14	12	18	9	12	15	13	16	15	15	15	15	17	13	692.129	716.067	751.828	734.769	31	30	29	26	675.5	693	750.875	655.222	739.875	771.4	718.4	740.2	702.333	737	728.667	720.5	657.25	692.167	764.2	757.286	6	3	8	9	8	5	5	10	9	11	6	4	8	6	10	7
610	0.966216	0.945946	1	0.944444	0.971429	-30.7185	-18.375	-43.7054	47.7767	39.4688	43.5104	744.484	696.708	744.188	704.719	731.667	688.156	728.645	720.364	759.364	672.312	31	33	33	32	714.5	743.733	735	708.357	737.85	716.857	747.438	702.529	745.2	759.353	753.375	752.062	660	674	662	671.867	16	15	16	14	20	14	16	17	15	17	16	16	16	15	16	15	733.625	692.265	718.794	731.357	32	34	34	28	732.5	758.2	736.5	703.7	816.778	715.167	718.125	695.636	754.2	763.364	752	727.2	665.625	666.5	660.5	675.444	6	5	10	10	9	6	8	11	10	11	6	5	8	6	8	9
612	0.939189	0.972973	0.916667	0.861111	1	5.22766	-54.825	56.6513	6.36011	57.1032	-56.8099	763.967	757.607	794.903	737.8	719.964	776.774	766.406	756.931	761.179	758.219	32	29	28	32	763.588	750.5	768.375	746.267	775.8	736.714	758.267	755.5	817.769	712.133	823.2	689.615	719.294	784.929	717.333	794.294	17	14	16	15	15	14	15	14	13	15	15	13	17	14	15	17	752.129	786.219	785.032	723.931	31	32	31	29	801.714	765	742.444	736.9	793.375	688	773.25	806.125	820.5	653.9	828.6	906.5	674.5	803.571	813	787.8	7	5	9	10	8	6	8	8	10	10	5	4	8	7	8	10
613	0.952703	0.972973	0.972222	0.916667	0.971429	-3.72278	-11.125	32.8314	70.0123	90.4924	58.6164	860.238	790.226	894.25	803.758	839.375	780.759	858.406	810.129	862.129	770.323	32	31	31	31	862.067	855.176	888.688	854.765	842.353	753	863.188	765	899.875	821.867	899.812	821.933	798.188	740.6	747.824	797.643	15	17	16	17	17	13	16	15	16	15	16	15	16	15	17	14	892.281	818.788	790.812	797.241	32	33	32	29	980.333	885.857	833.7	808.778	927.889	762	742.5	791.333	954.4	830.556	808.833	809	719.857	742.167	739.556	839.25	6	7	10	9	9	7	6	9	10	9	6	6	7	6	9	8
614	0.986486	0.972973	1	1	0.971429	-15.4706	-34.6736	-19.6802	35.4567	33.6434	56.311	695.53	660.074	702.206	668.562	700.576	644.265	688.029	640.6	703.5	680.727	34	35	32	33	654.125	713.471	685.889	690.438	621.947	644.143	641.6	622.833	737.733	696.389	720.562	710.118	669.562	680.938	692.353	668.375	16	17	18	16	19	14	15	18	15	18	16	17	16	16	17	16	667.484	659.806	693.73	689.281	31	36	37	32	624.429	733.143	725	689.3	674.778	646.833	642.125	610.833	735.889	693.545	700.857	740.5	673.429	673.429	705.6	666.556	7	7	11	10	9	6	8	12	9	11	7	6	7	7	10	9
615	0.959459	0.972973	0.944444	0.916667	1	-5.5484	-85.2941	52.2524	95.5413	137.011	60.8876	853.323	757.781	879.824	742.812	839.759	778.871	850.548	767	856.097	748.562	31	32	31	32	853.875	847	837.176	866.786	768.476	726.455	767.2	766.824	872.538	844.222	922.471	814.533	747.176	750.133	721.294	793.5	16	15	17	14	21	11	15	17	13	18	17	15	17	15	17	14	811.515	802.743	801.629	814.259	33	35	35	27	892.714	944.4	798.3	823.667	810.625	780.8	717.571	761	907.6	788.636	943.714	885.75	670.571	736.8	756.8	800.8	7	5	10	9	8	5	7	12	10	11	7	4	7	5	10	10
616	0.898649	0.810811	0.888889	0.888889	1	-3.86041	-30.9286	22.3214	40.1133	74.3521	-14.3601	738.48	698.367	749.042	674.69	728.731	743.091	736.318	714	740.179	684.688	22	28	28	32	699.9	787.846	731	740.75	675.667	758.231	679.231	770.688	791.769	706.2	761.929	718.429	717.812	651.562	671	717.118	10	13	10	12	15	13	13	16	13	15	14	14	16	16	16	17	719.826	721.161	694.968	734.429	23	31	31	28	756	831.6	760.5	675.857	664.833	894.429	691.571	682.889	809.75	733.9	698.167	834.833	704.857	646.714	655.333	766.4	3	5	8	7	6	7	7	9	8	10	6	6	7	7	9	10
617	0.939189	1	0.944444	0.805556	1	-8.60944	21.1099	-54.2667	95.7955	92.3106	86.8387	727.441	631.645	726.407	634.097	718.258	631.419	723.355	665.806	731.964	597.484	31	31	28	31	735.688	710.2	736.571	692	664.176	653.385	655.333	679.938	746.25	712.917	715.462	746.267	595.312	599.8	614.188	579.667	16	15	14	16	17	13	15	16	16	12	13	15	16	15	16	15	708.3	642.909	640.733	690.25	30	33	30	28	821	752.429	673.25	651.667	690.375	696	646.625	670.3	748.5	723.125	726.25	742.5	622.857	588.333	607.444	573.889	6	7	8	9	8	6	8	10	10	8	4	6	7	6	9	9
618	0.871622	0.864865	0.833333	0.916667	0.885714	-11.4643	-62.6923	22.2582	12.0453	6.70923	9.75922	743.556	731.51	745.269	738.56	733.926	724.167	738.036	752.44	749.5	709.708	28	25	26	24	723.455	734.25	713.923	744.643	715.538	792.417	777	729.769	736.167	740.615	776.615	722.385	686.615	779	703.077	717.545	11	16	13	14	13	12	12	13	12	13	13	13	13	13	13	11	704.364	723.111	778.625	737.56	22	27	32	25	697.667	760	718.8	758.222	763.667	806.167	842.714	734.625	750	728.556	819.2	708.5	663	795	769	706.857	3	6	10	9	6	6	7	8	8	9	5	4	6	5	8	7
619	0.891892	0.864865	0.861111	0.916667	0.914286	78.1355	92.2596	81.6718	71.8606	118.09	23.9835	820.175	748.315	866.483	748.393	772.214	748.231	859.929	767.778	781.793	728.852	28	27	29	27	811.571	908.286	917.385	810.133	755	762.364	768.75	767	808.4	753.286	825.125	728.462	699.25	752.533	733.125	722.636	14	14	13	15	15	11	12	15	15	14	16	13	12	15	16	11	788.038	764.655	805.233	778.154	26	29	30	26	916.2	813.2	961.111	808.6	773.333	886.833	764.167	742.778	848.111	711	795.571	748.833	705.714	812.857	754.444	690.2	5	5	9	10	6	6	6	9	9	7	7	6	7	7	9	5
620	0.668919	0.621622	0.638889	0.694444	0.685714	17.1875	-91.2222	91.8571	45.7205	63.9127	-20.4863	864.406	818.686	904.722	840.81	841.867	862.353	873	847.938	855.812	794.053	16	16	16	19	901.375	844.625	859.111	890.857	938.455	740.167	867.4	870	966.222	781.125	950.333	799	846.455	824.2	816.636	857	8	8	9	7	11	6	10	7	9	8	9	8	11	10	11	10	928.722	891.579	791	796	18	19	19	13	902.667	866.5	837.333	900.6	935.667	690.5	765	941.8	1004.29	787.667	761.5	833	812.25	836	819.143	866	3	2	6	5	6	2	4	5	7	6	2	2	4	3	7	7
622	0.972973	1	0.972222	0.916667	1	15.4828	38.3875	-12.949	8.31415	14.7308	5.89337	711.016	702.701	724.387	709.656	693.188	687.294	718.515	719.059	703.032	685.849	33	34	31	33	700.353	737.812	744.2	687.118	726.684	693.571	729.933	694.167	715.231	694.222	705.812	700.067	663.125	697.375	691.765	679.562	17	16	15	17	19	14	15	18	13	18	16	15	16	16	17	16	699.133	703	734	678.5	30	35	35	32	717.833	680.333	784.7	690.818	777	700.571	717.125	690.091	701.7	667.182	752.143	825.75	642.571	680.143	710.778	679.111	6	6	10	11	8	7	8	11	10	11	7	4	7	7	9	9
623	0.824324	0.72973	0.833333	0.805556	0.942857	117.452	164.233	66.8777	56.4592	99.2468	4.7254	805.341	748.882	811.318	712.071	798.421	793.696	865.5	734.45	748.048	758.194	20	20	21	31	843.182	892.778	900.9	830.1	731.909	737.556	720.667	755.125	759.077	730.125	736.667	763.222	814.688	697.933	705.625	814.267	11	9	10	10	11	9	12	8	13	8	12	9	16	15	16	15	753.72	802.72	692	802.263	25	25	23	19	987.25	991.667	843.333	760.857	819.143	933.75	695.333	715	761.5	769.333	612.5	852.5	754	742.833	668	861.889	4	3	6	7	7	4	6	5	10	6	2	4	7	6	9	9
624	0.97973	1	1	0.944444	0.971429	20	-1.64337	39.458	33.609	25.1591	36.3273	641.803	608.194	623.909	598.75	647.71	611.382	651.5	601.235	631.5	615.364	34	34	32	33	636.529	653.875	623.062	665.529	583.85	612.308	594.25	607.444	618.467	643	624.706	626.071	600.438	629.412	603.25	615.812	17	16	16	17	20	13	16	18	15	17	17	14	16	17	16	16	602.424	619.639	632.4	643	33	36	35	31	585.833	681.857	632.111	654.1	568.375	660.286	608.429	584.364	619	650.1	632.857	617.4	594.429	629.571	610.111	605.111	6	7	9	10	8	7	7	11	10	10	7	5	7	7	9	9
625	0.925676	0.945946	0.944444	0.833333	1	-106.945	-74.8762	-189.205	101.773	32.1346	217.483	861.982	760.21	809.586	777.452	941.207	723.724	809.448	833.5	916.393	691.5	29	30	28	32	787.067	812.154	770.857	849.867	852.688	785.923	846.375	793.692	897.267	983.857	845.733	1039.07	705.941	659.143	703.933	666.875	15	13	14	15	16	13	16	13	15	14	15	14	17	14	15	16	843	777.097	761.533	826.769	32	31	30	26	761.714	849.667	821.25	850	998.556	884.5	739.857	769.5	857.667	1100.88	827.833	956.667	727.286	626.667	683.5	691	7	6	8	9	9	6	7	8	9	8	6	6	7	6	8	10
626	0.986486	0.972973	1	0.972222	1	-49.2746	-37.3823	-21.1875	72.924	81.5151	39.8785	808.954	736.03	781.242	699.727	833.656	793.778	783.938	751.151	833.212	721.353	32	33	33	34	809.688	779.059	763.118	823.062	752.5	806.067	709.125	831.316	839.933	806.882	800.5	844.25	715.882	714.562	690.882	751.824	16	17	17	16	20	15	16	19	15	17	16	16	17	16	17	17	753.094	790.861	738.73	836.688	32	36	37	32	792.429	823	750.5	823.111	730.875	941.714	666.429	766.917	810.556	874.273	787.571	884	676.25	692.5	703.889	768.3	7	7	10	9	8	7	7	12	9	11	7	6	8	6	9	10
627	0.959459	0.918919	1	0.916667	1	3.10583	-7.09583	12.875	93.1689	108.362	85.3466	716.81	623.641	715.129	606.767	718.438	633.091	718.387	606.433	715.281	638.824	31	30	32	34	704.125	733.6	711.467	724.875	612.316	613.917	593.462	616.353	764.933	671.471	718.562	712	662.667	619.312	616.941	650.875	16	15	15	16	19	12	13	17	15	17	16	16	18	16	17	16	665.656	687.135	662.303	655.379	32	37	33	29	657.333	754	723.4	711.636	637.125	649.5	578.333	598.273	754.5	678.455	658.667	785.8	558.714	590.857	641.444	721.3	6	5	10	11	8	6	6	11	10	11	6	5	7	7	9	10
628	0.952703	0.972973	0.972222	0.861111	1	-17.3549	-14.5	22.3235	51.2108	20.0625	36.4516	820.033	768.823	825	804.938	796.742	760.29	811.645	771.767	829	766.062	31	30	29	32	827.706	792.143	817.5	806.824	789.375	751.643	786.5	794.062	817.571	839.667	832	784.5	810.294	739.562	819.278	724.267	17	14	14	17	16	14	14	16	14	15	15	14	17	16	18	15	832.484	783.353	787.909	778.3	31	34	33	30	874.333	815.167	774.875	802.273	805.857	816.571	744.5	776.556	819.6	801.556	919	753.8	840.5	701	802.3	783.444	6	6	8	11	7	7	8	9	10	9	6	5	8	7	10	9
629	0.97973	0.972973	0.972222	0.972222	1	57.7844	36.6875	79.4117	88.8286	58.7273	76.3048	940.657	851.828	1081.21	1022.48	808.941	732.636	969.118	881.29	911.333	824.151	34	31	33	33	926.438	1015.94	1099	848.647	868.778	898.615	1122.44	721.625	989.75	837.529	1062.31	769.235	813.941	857.471	928.412	743	16	18	17	17	18	13	16	16	16	17	16	17	17	17	17	17	1035.59	771.286	1081.17	736.844	32	35	36	32	1086.17	874.429	1165.92	830.6	1101.33	757	1149.57	694.111	1068.36	679.091	1159.17	995.5	934	761.714	924.5	729.9	6	7	12	10	9	7	7	9	11	11	6	6	7	7	10	10
630	0.925676	0.918919	0.888889	0.916667	0.971429	-44.4958	-33.6298	-59.7758	120.436	143.828	112.971	941.032	820.596	917.862	774.034	961.394	848.423	918.067	833.483	962.562	807.25	30	29	32	28	849.933	986.2	899.308	932.412	819.25	851	817.538	819.667	886.25	1026.93	932.938	992.188	774.143	802.615	738.688	887.636	15	15	13	17	16	13	13	15	16	15	16	16	14	13	16	11	809.448	854.906	886.667	981.241	29	32	30	29	805	1018.14	958.25	872.4	949	932.167	781.429	765.222	894.455	1031.6	1017.6	926.5	714.25	928	791.667	854	5	7	8	10	7	6	7	9	11	10	5	6	8	5	9	6
631	0.993243	0.972973	1	1	1	-7.02856	-4.44446	-9.76471	52.7156	24.5197	90.1444	737.171	684.456	727.667	703.147	747.235	657.091	733.657	686.059	740.686	682.853	35	34	35	34	690.688	756.333	725.444	742.353	676.895	681.786	686.688	669.824	722.882	757.5	729.889	752.118	708.333	656	717.778	643.562	16	18	18	17	19	14	16	17	17	18	18	17	18	16	18	16	713.091	688.649	721.82	722	33	37	39	32	724.667	817.333	725.833	670.3	662.125	682.143	711.25	661.2	710.636	755.818	760.143	745.333	758.75	647.143	685	640.778	6	6	12	10	8	7	8	10	11	11	7	6	8	7	10	9
632	0.97973	0.972973	0.972222	0.972222	1	-4.66663	31.5882	-68.0208	38.6061	34.272	48.2893	680.939	642.333	658.147	623.875	700.774	652.485	678.606	662.353	683.273	621.062	33	34	33	32	644.688	694.312	673.941	665.667	668.095	653.077	651.375	658.824	648.733	692.529	642.353	733.688	676.118	623.412	596.375	645.75	16	16	17	15	21	13	16	17	15	17	17	16	17	17	16	16	632.303	670.171	656.75	668.3	33	35	36	30	698.143	756.5	657	614.111	582.125	605.5	746.875	705.417	612.5	729.273	685	743.4	698.375	621.286	624.9	664.778	7	6	10	9	8	6	8	12	10	11	7	5	8	7	10	9
900	0.993243	0.972973	1	1	1	-27.147	-58.5883	20.7059	75.8159	87.3634	81.9706	771.338	695.522	774.457	687.094	775.588	693.618	757.765	709.147	784.912	681.485	34	34	34	33	781.941	733.588	746	785.941	704.2	694.154	702.733	696.667	821.235	748.588	804.588	765.235	668.941	687.467	673.294	690.188	17	17	18	17	20	13	15	18	17	17	17	17	17	15	17	16	740.969	718.649	699.722	748.562	32	37	36	32	748.143	713.333	744.636	825.545	740	772.286	660.143	648.545	848.455	761.909	724.167	771.333	657.143	738.571	671.222	677.2	7	6	11	11	8	7	7	11	11	11	6	6	7	7	9	10
901	0.959459	0.972973	1	0.944444	0.942857	-11.4562	-102.145	99.4905	69.664	59.2354	91.5215	751.387	681.723	727.469	668.233	780.897	689.375	745.844	692.394	757.3	670.719	32	33	30	32	703.667	783.059	679.588	832.357	683.55	706	686.8	683.941	753.769	759.4	781.733	732.867	659.2	668.438	649.667	695.533	15	17	17	14	20	13	15	17	13	15	15	15	15	16	15	15	672.533	720.455	720.083	728.071	30	33	36	28	673.286	968.5	752	730.25	660	755.143	717.429	679.182	751.875	742.778	815.857	756.8	612.714	690.571	655.778	699.875	7	6	12	8	8	7	7	11	8	9	7	5	7	7	9	8
606	0.959459	0.945946	1	0.916667	0.971429	-28.8	-45.9471	1.45886	37.9667	46.8405	18.7812	684.3	646.333	698.966	652.125	666.375	647.594	669.9	644.625	698.7	648.097	30	32	30	31	675.062	664	673.615	667.059	642.556	652.714	651.8	638.294	712.571	686.562	719.562	665.6	644.062	668.125	652.412	658.133	16	14	13	17	18	14	15	17	14	16	16	15	16	16	17	15	691.968	647.176	683.273	662.133	31	34	33	30	689.333	667.857	660.143	686.091	678.625	687.143	621.143	628.455	729.4	676.6	734.143	643.6	637.125	679.286	666	651	6	7	7	11	8	7	7	11	10	10	7	5	8	7	9	8
;
run;


